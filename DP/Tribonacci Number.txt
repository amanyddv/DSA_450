class Solution {
public:
    int tribonacci(int n) {
        if(n==0) return 0;
        else if(n==1 || n==2) return 1;
        return tribonacci(n-3) +tribonacci(n-2)+tribonacci(n-1);
    }
};

link : https://leetcode.com/problems/n-th-tribonacci-number/?envType=study-plan&id=dynamic-programming-i

Time Complexity: O(2^n)
